require "xml"
require "./nzb/*"

class Nzb
  getter nzb_filename : String

  property name : String? = nil
  property category : String? = nil
  getter files : Array(Nzb::File) = [] of Nzb::File

  # we accept basename and prefix, combine them and add suffix ".nzb"
  def initialize(filename, prefix = "")
    @nzb_filename = prefix + filename + ".nzb"
  end

  def build
    XML.build(indent: "  ", version: "1.0", encoding: "UTF-8") do |xml|
      xml.dtd(name: "nzb", pubid: "-//newzBin//DTD NZB 1.1//EN", sysid: "http://www.newzbin.com/DTD/nzb/nzb-1.1.dtd") { }
      xml.element("nzb", xmlns: "http://www.newzbin.com/DTD/2003/nzb") do
        gen_header(xml)
        gen_files(xml)
      end
    end
  end

  def write_nzb
    content = self.build

    ::File.open(@nzb_filename, "w", encoding: "UTF-8") do |file|
      file.puts content
    end
  end

  # Generate headers
  protected def gen_header(xml)
    xml.element("head") do
      xml.element("meta", type: "name") { xml.text name.as(String) } unless name.nil?
      xml.element("meta", type: "category") { xml.text category.as(String) } unless category.nil?
    end

    xml.comment "generated by nzb.cr #{VERSION}"
  end

  protected def gen_files(xml)
    files.each &.to_xml(xml)
  end
end
